<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LIn+Ab76nh1cfsloAAAAAElFTkSuQmCC
</value>
  </data>
</root>